What happens when you initialize a repository? Why do you need to do it?
	The .git file is then created in the repository. It is needed in order to save all versions
	of the repository and be able to manipulate them.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
	The staging area works as a temporary phase where only the files you want to add to the
	repository are. On the other hand, the working directory contains all the files.

How can you use the staging area to make sure you have one commit per logical
change?
	You can use git diff in order to compare the files in the staging area and the most recent
	commit in your repository. This way you can see what you have added to your file and
	guarantee having one logical change per commit.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	You can use branches when trying to develop different features for your program. You can
	simply add a branch at a certain commit and continue working on two different features
	in your program in the same time until the time comes to merge them. This can be very
	time efficient and will help make the process of development exponentially faster.

How do the diagrams help you visualize the branch structure?
	Diagrams make it much easier to understand the relations in the branch structure
	which makes using them much easier.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
	The result is a new commit which includes the changes from both branches in a single commit.
	We represent it this way because this new commit becomes the new tip of the master branch
	and all the previous commits from both branches are now part of that branch.


What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
	The pros include saving a lot of time and avoiding errors that would have appeared.
	Also, Git informs you if the files are conflicted which makes it easier to modify them
	and allows the user to handle the merging process with ease.
	
	The cons include not being able to handle conflicted files.
